<?php
/**
 * TransactionalMessagingApiTest
 * PHP version 5
 *
 * @category Class
 * @package  SalesForce\MarketingCloud
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Marketing Cloud REST API
 *
 * Marketing Cloud's REST API is our newest API. It supports multi-channel use cases, is much more lightweight and easy to use than our SOAP API, and is getting more comprehensive with every release.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: mc_sdk@salesforce.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.8
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace SalesForce\MarketingCloud\Test\Api;

use SalesForce\MarketingCloud\TestHelper\Api\BaseApiTest;

/**
 * TransactionalMessagingApiTest Class Doc Comment
 *
 * @category Class
 * @package  SalesForce\MarketingCloud
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class TransactionalMessagingApiTest extends BaseApiTest
{
    /**
     * The client class to use in order to build the client object
     *
     * @var string
     */
    protected $clientClass = \SalesForce\MarketingCloud\Api\TransactionalMessagingApi::class;

    /**
     * @var string
     */
    protected static $modelNamespace = "\SalesForce\MarketingCloud\Model";

    
    /**
     * Test case for createEmailDefinition
     *
     * createEmailDefinition.
     * @throws \Exception
     */
    public function testCreateEmailDefinition()
    {
        $this->setHttpMethod("POST");

        // Looking for a decorator first
        /** @var \SalesForce\MarketingCloud\TestHelper\Decorator\TransactionalMessagingApiDecorator $decorator */
        $decorator = $this->getDecorator();
        if (method_exists($decorator, "testCreateEmailDefinition")) {
            return $decorator->testCreateEmailDefinition();
        }
        
        // Setting up the resource creator
        $resourceCreator = $this->getResourceCreator();
        $resourceCreator->setModelClass(
            __FUNCTION__,
            "\SalesForce\MarketingCloud\Model\EmailDefinition"
        );

        // SUT
        $this->createResourceOnEndpoint();
        $this->executeOperation("createEmailDefinition");
    }
    
    /**
     * Test case for createSmsDefinition
     *
     * createSmsDefinition.
     * @throws \Exception
     */
    public function testCreateSmsDefinition()
    {
        $this->setHttpMethod("POST");

        // Looking for a decorator first
        /** @var \SalesForce\MarketingCloud\TestHelper\Decorator\TransactionalMessagingApiDecorator $decorator */
        $decorator = $this->getDecorator();
        if (method_exists($decorator, "testCreateSmsDefinition")) {
            return $decorator->testCreateSmsDefinition();
        }
        
        // Setting up the resource creator
        $resourceCreator = $this->getResourceCreator();
        $resourceCreator->setModelClass(
            __FUNCTION__,
            "\SalesForce\MarketingCloud\Model\SmsDefinition"
        );

        // SUT
        $this->createResourceOnEndpoint();
        $this->executeOperation("createSmsDefinition");
    }
    
    /**
     * Test case for deleteEmailDefinition
     *
     * deleteEmailDefinition.
     * @throws \Exception
     */
    public function testDeleteEmailDefinition()
    {
        $this->setHttpMethod("DELETE");

        // Looking for a decorator first
        /** @var \SalesForce\MarketingCloud\TestHelper\Decorator\TransactionalMessagingApiDecorator $decorator */
        $decorator = $this->getDecorator();
        if (method_exists($decorator, "testDeleteEmailDefinition")) {
            return $decorator->testDeleteEmailDefinition();
        }
        
        // Setting up the resource creator
        $resourceCreator = $this->getResourceCreator();
        $resourceCreator->setModelClass(
            __FUNCTION__,
            "\SalesForce\MarketingCloud\Model\DeleteSendDefinitionResponse"
        );

        // SUT
        $this->createResourceOnEndpoint();
        $this->executeOperation("deleteEmailDefinition");
    }
    
    /**
     * Test case for deleteQueuedMessagesForEmailDefinition
     *
     * deleteQueuedMessagesForEmailDefinition.
     * @throws \Exception
     */
    public function testDeleteQueuedMessagesForEmailDefinition()
    {
        $this->setHttpMethod("DELETE");

        // Looking for a decorator first
        /** @var \SalesForce\MarketingCloud\TestHelper\Decorator\TransactionalMessagingApiDecorator $decorator */
        $decorator = $this->getDecorator();
        if (method_exists($decorator, "testDeleteQueuedMessagesForEmailDefinition")) {
            return $decorator->testDeleteQueuedMessagesForEmailDefinition();
        }
        
        // Setting up the resource creator
        $resourceCreator = $this->getResourceCreator();
        $resourceCreator->setModelClass(
            __FUNCTION__,
            "\SalesForce\MarketingCloud\Model\DeleteQueuedMessagesForSendDefinitionResponse"
        );

        // SUT
        $this->createResourceOnEndpoint();
        $this->executeOperation("deleteQueuedMessagesForEmailDefinition");
    }
    
    /**
     * Test case for deleteQueuedMessagesForSmsDefinition
     *
     * deleteQueuedMessagesForSmsDefinition.
     * @throws \Exception
     */
    public function testDeleteQueuedMessagesForSmsDefinition()
    {
        $this->setHttpMethod("DELETE");

        // Looking for a decorator first
        /** @var \SalesForce\MarketingCloud\TestHelper\Decorator\TransactionalMessagingApiDecorator $decorator */
        $decorator = $this->getDecorator();
        if (method_exists($decorator, "testDeleteQueuedMessagesForSmsDefinition")) {
            return $decorator->testDeleteQueuedMessagesForSmsDefinition();
        }
        
        // Setting up the resource creator
        $resourceCreator = $this->getResourceCreator();
        $resourceCreator->setModelClass(
            __FUNCTION__,
            "\SalesForce\MarketingCloud\Model\DeleteQueuedMessagesForSendDefinitionResponse"
        );

        // SUT
        $this->createResourceOnEndpoint();
        $this->executeOperation("deleteQueuedMessagesForSmsDefinition");
    }
    
    /**
     * Test case for deleteSmsDefinition
     *
     * deleteSmsDefinition.
     * @throws \Exception
     */
    public function testDeleteSmsDefinition()
    {
        $this->setHttpMethod("DELETE");

        // Looking for a decorator first
        /** @var \SalesForce\MarketingCloud\TestHelper\Decorator\TransactionalMessagingApiDecorator $decorator */
        $decorator = $this->getDecorator();
        if (method_exists($decorator, "testDeleteSmsDefinition")) {
            return $decorator->testDeleteSmsDefinition();
        }
        
        // Setting up the resource creator
        $resourceCreator = $this->getResourceCreator();
        $resourceCreator->setModelClass(
            __FUNCTION__,
            "\SalesForce\MarketingCloud\Model\DeleteSendDefinitionResponse"
        );

        // SUT
        $this->createResourceOnEndpoint();
        $this->executeOperation("deleteSmsDefinition");
    }
    
    /**
     * Test case for getEmailDefinition
     *
     * getEmailDefinition.
     * @throws \Exception
     */
    public function testGetEmailDefinition()
    {
        $this->setHttpMethod("GET");

        // Looking for a decorator first
        /** @var \SalesForce\MarketingCloud\TestHelper\Decorator\TransactionalMessagingApiDecorator $decorator */
        $decorator = $this->getDecorator();
        if (method_exists($decorator, "testGetEmailDefinition")) {
            return $decorator->testGetEmailDefinition();
        }
        
        // Setting up the resource creator
        $resourceCreator = $this->getResourceCreator();
        $resourceCreator->setModelClass(
            __FUNCTION__,
            "\SalesForce\MarketingCloud\Model\EmailDefinition"
        );

        // SUT
        $this->createResourceOnEndpoint();
        $this->executeOperation("getEmailDefinition");
    }
    
    /**
     * Test case for getEmailDefinitions
     *
     * getEmailDefinitions.
     * @throws \Exception
     */
    public function testGetEmailDefinitions()
    {
        $this->setHttpMethod("GETALL");

        // Looking for a decorator first
        /** @var \SalesForce\MarketingCloud\TestHelper\Decorator\TransactionalMessagingApiDecorator $decorator */
        $decorator = $this->getDecorator();
        if (method_exists($decorator, "testGetEmailDefinitions")) {
            return $decorator->testGetEmailDefinitions();
        }
        
        // Setting up the resource creator
        $resourceCreator = $this->getResourceCreator();
        $resourceCreator->setModelClass(
            __FUNCTION__,
            "\SalesForce\MarketingCloud\Model\GetEmailDefinitionsResponse"
        );

        // SUT
        $this->createResourceOnEndpoint();
        $this->executeOperation("getEmailDefinitions");
    }
    
    /**
     * Test case for getEmailSendStatusForRecipient
     *
     * getEmailSendStatusForRecipient.
     * @throws \Exception
     */
    public function testGetEmailSendStatusForRecipient()
    {
        $this->setHttpMethod("GET");

        // Looking for a decorator first
        /** @var \SalesForce\MarketingCloud\TestHelper\Decorator\TransactionalMessagingApiDecorator $decorator */
        $decorator = $this->getDecorator();
        if (method_exists($decorator, "testGetEmailSendStatusForRecipient")) {
            return $decorator->testGetEmailSendStatusForRecipient();
        }
        
        // Setting up the resource creator
        $resourceCreator = $this->getResourceCreator();
        $resourceCreator->setModelClass(
            __FUNCTION__,
            "\SalesForce\MarketingCloud\Model\GetDefinitionSendStatusForRecipientResponse"
        );

        // SUT
        $this->createResourceOnEndpoint();
        $this->executeOperation("getEmailSendStatusForRecipient");
    }
    
    /**
     * Test case for getEmailsNotSentToRecipients
     *
     * getEmailsNotSentToRecipients.
     * @throws \Exception
     */
    public function testGetEmailsNotSentToRecipients()
    {
        $this->setHttpMethod("GET");

        // Looking for a decorator first
        /** @var \SalesForce\MarketingCloud\TestHelper\Decorator\TransactionalMessagingApiDecorator $decorator */
        $decorator = $this->getDecorator();
        if (method_exists($decorator, "testGetEmailsNotSentToRecipients")) {
            return $decorator->testGetEmailsNotSentToRecipients();
        }
        
        // Setting up the resource creator
        $resourceCreator = $this->getResourceCreator();
        $resourceCreator->setModelClass(
            __FUNCTION__,
            "\SalesForce\MarketingCloud\Model\GetDefinitionsNotSentToRecipientsResponse"
        );

        // SUT
        $this->createResourceOnEndpoint();
        $this->executeOperation("getEmailsNotSentToRecipients");
    }
    
    /**
     * Test case for getQueueMetricsForEmailDefinition
     *
     * getQueueMetricsForEmailDefinition.
     * @throws \Exception
     */
    public function testGetQueueMetricsForEmailDefinition()
    {
        $this->setHttpMethod("GET");

        // Looking for a decorator first
        /** @var \SalesForce\MarketingCloud\TestHelper\Decorator\TransactionalMessagingApiDecorator $decorator */
        $decorator = $this->getDecorator();
        if (method_exists($decorator, "testGetQueueMetricsForEmailDefinition")) {
            return $decorator->testGetQueueMetricsForEmailDefinition();
        }
        
        // Setting up the resource creator
        $resourceCreator = $this->getResourceCreator();
        $resourceCreator->setModelClass(
            __FUNCTION__,
            "\SalesForce\MarketingCloud\Model\GetQueueMetricsForSendDefinitionResponse"
        );

        // SUT
        $this->createResourceOnEndpoint();
        $this->executeOperation("getQueueMetricsForEmailDefinition");
    }
    
    /**
     * Test case for getQueueMetricsForSmsDefinition
     *
     * getQueueMetricsForSmsDefinition.
     * @throws \Exception
     */
    public function testGetQueueMetricsForSmsDefinition()
    {
        $this->setHttpMethod("GET");

        // Looking for a decorator first
        /** @var \SalesForce\MarketingCloud\TestHelper\Decorator\TransactionalMessagingApiDecorator $decorator */
        $decorator = $this->getDecorator();
        if (method_exists($decorator, "testGetQueueMetricsForSmsDefinition")) {
            return $decorator->testGetQueueMetricsForSmsDefinition();
        }
        
        // Setting up the resource creator
        $resourceCreator = $this->getResourceCreator();
        $resourceCreator->setModelClass(
            __FUNCTION__,
            "\SalesForce\MarketingCloud\Model\GetQueueMetricsForSendDefinitionResponse"
        );

        // SUT
        $this->createResourceOnEndpoint();
        $this->executeOperation("getQueueMetricsForSmsDefinition");
    }
    
    /**
     * Test case for getSMSsNotSentToRecipients
     *
     * getSMSsNotSentToRecipients.
     * @throws \Exception
     */
    public function testGetSMSsNotSentToRecipients()
    {
        $this->setHttpMethod("GET");

        // Looking for a decorator first
        /** @var \SalesForce\MarketingCloud\TestHelper\Decorator\TransactionalMessagingApiDecorator $decorator */
        $decorator = $this->getDecorator();
        if (method_exists($decorator, "testGetSMSsNotSentToRecipients")) {
            return $decorator->testGetSMSsNotSentToRecipients();
        }
        
        // Setting up the resource creator
        $resourceCreator = $this->getResourceCreator();
        $resourceCreator->setModelClass(
            __FUNCTION__,
            "\SalesForce\MarketingCloud\Model\GetDefinitionsNotSentToRecipientsResponse"
        );

        // SUT
        $this->createResourceOnEndpoint();
        $this->executeOperation("getSMSsNotSentToRecipients");
    }
    
    /**
     * Test case for getSmsDefinition
     *
     * getSmsDefinition.
     * @throws \Exception
     */
    public function testGetSmsDefinition()
    {
        $this->setHttpMethod("GET");

        // Looking for a decorator first
        /** @var \SalesForce\MarketingCloud\TestHelper\Decorator\TransactionalMessagingApiDecorator $decorator */
        $decorator = $this->getDecorator();
        if (method_exists($decorator, "testGetSmsDefinition")) {
            return $decorator->testGetSmsDefinition();
        }
        
        // Setting up the resource creator
        $resourceCreator = $this->getResourceCreator();
        $resourceCreator->setModelClass(
            __FUNCTION__,
            "\SalesForce\MarketingCloud\Model\SmsDefinition"
        );

        // SUT
        $this->createResourceOnEndpoint();
        $this->executeOperation("getSmsDefinition");
    }
    
    /**
     * Test case for getSmsDefinitions
     *
     * getSmsDefinitions.
     * @throws \Exception
     */
    public function testGetSmsDefinitions()
    {
        $this->setHttpMethod("GETALL");

        // Looking for a decorator first
        /** @var \SalesForce\MarketingCloud\TestHelper\Decorator\TransactionalMessagingApiDecorator $decorator */
        $decorator = $this->getDecorator();
        if (method_exists($decorator, "testGetSmsDefinitions")) {
            return $decorator->testGetSmsDefinitions();
        }
        
        // Setting up the resource creator
        $resourceCreator = $this->getResourceCreator();
        $resourceCreator->setModelClass(
            __FUNCTION__,
            "\SalesForce\MarketingCloud\Model\GetSmsDefinitionsResponse"
        );

        // SUT
        $this->createResourceOnEndpoint();
        $this->executeOperation("getSmsDefinitions");
    }
    
    /**
     * Test case for getSmsSendStatusForRecipient
     *
     * getSmsSendStatusForRecipient.
     * @throws \Exception
     */
    public function testGetSmsSendStatusForRecipient()
    {
        $this->setHttpMethod("GET");

        // Looking for a decorator first
        /** @var \SalesForce\MarketingCloud\TestHelper\Decorator\TransactionalMessagingApiDecorator $decorator */
        $decorator = $this->getDecorator();
        if (method_exists($decorator, "testGetSmsSendStatusForRecipient")) {
            return $decorator->testGetSmsSendStatusForRecipient();
        }
        
        // Setting up the resource creator
        $resourceCreator = $this->getResourceCreator();
        $resourceCreator->setModelClass(
            __FUNCTION__,
            "\SalesForce\MarketingCloud\Model\GetDefinitionSendStatusForRecipientResponse"
        );

        // SUT
        $this->createResourceOnEndpoint();
        $this->executeOperation("getSmsSendStatusForRecipient");
    }
    
    /**
     * Test case for partiallyUpdateEmailDefinition
     *
     * partiallyUpdateEmailDefinition.
     * @throws \Exception
     */
    public function testPartiallyUpdateEmailDefinition()
    {
        $this->setHttpMethod("PATCH");

        // Looking for a decorator first
        /** @var \SalesForce\MarketingCloud\TestHelper\Decorator\TransactionalMessagingApiDecorator $decorator */
        $decorator = $this->getDecorator();
        if (method_exists($decorator, "testPartiallyUpdateEmailDefinition")) {
            return $decorator->testPartiallyUpdateEmailDefinition();
        }
        
        // Setting up the resource creator
        $resourceCreator = $this->getResourceCreator();
        $resourceCreator->setModelClass(
            __FUNCTION__,
            "\SalesForce\MarketingCloud\Model\EmailDefinition"
        );

        // SUT
        $this->createResourceOnEndpoint();
        $this->executeOperation("partiallyUpdateEmailDefinition");
    }
    
    /**
     * Test case for partiallyUpdateSmsDefinition
     *
     * partiallyUpdateSmsDefinition.
     * @throws \Exception
     */
    public function testPartiallyUpdateSmsDefinition()
    {
        $this->setHttpMethod("PATCH");

        // Looking for a decorator first
        /** @var \SalesForce\MarketingCloud\TestHelper\Decorator\TransactionalMessagingApiDecorator $decorator */
        $decorator = $this->getDecorator();
        if (method_exists($decorator, "testPartiallyUpdateSmsDefinition")) {
            return $decorator->testPartiallyUpdateSmsDefinition();
        }
        
        // Setting up the resource creator
        $resourceCreator = $this->getResourceCreator();
        $resourceCreator->setModelClass(
            __FUNCTION__,
            "\SalesForce\MarketingCloud\Model\SmsDefinition"
        );

        // SUT
        $this->createResourceOnEndpoint();
        $this->executeOperation("partiallyUpdateSmsDefinition");
    }
    
    /**
     * Test case for sendEmailToMultipleRecipients
     *
     * sendEmailToMultipleRecipients.
     * @throws \Exception
     */
    public function testSendEmailToMultipleRecipients()
    {
        $this->setHttpMethod("POST");

        // Looking for a decorator first
        /** @var \SalesForce\MarketingCloud\TestHelper\Decorator\TransactionalMessagingApiDecorator $decorator */
        $decorator = $this->getDecorator();
        if (method_exists($decorator, "testSendEmailToMultipleRecipients")) {
            return $decorator->testSendEmailToMultipleRecipients();
        }
        
        // Setting up the resource creator
        $resourceCreator = $this->getResourceCreator();
        $resourceCreator->setModelClass(
            __FUNCTION__,
            "\SalesForce\MarketingCloud\Model\SendDefinitionToMultipleRecipientsResponse"
        );

        // SUT
        $this->createResourceOnEndpoint();
        $this->executeOperation("sendEmailToMultipleRecipients");
    }
    
    /**
     * Test case for sendEmailToSingleRecipient
     *
     * sendEmailToSingleRecipient.
     * @throws \Exception
     */
    public function testSendEmailToSingleRecipient()
    {
        $this->setHttpMethod("POST");

        // Looking for a decorator first
        /** @var \SalesForce\MarketingCloud\TestHelper\Decorator\TransactionalMessagingApiDecorator $decorator */
        $decorator = $this->getDecorator();
        if (method_exists($decorator, "testSendEmailToSingleRecipient")) {
            return $decorator->testSendEmailToSingleRecipient();
        }
        
        // Setting up the resource creator
        $resourceCreator = $this->getResourceCreator();
        $resourceCreator->setModelClass(
            __FUNCTION__,
            "\SalesForce\MarketingCloud\Model\SendDefinitionToSingleRecipientResponse"
        );

        // SUT
        $this->createResourceOnEndpoint();
        $this->executeOperation("sendEmailToSingleRecipient");
    }
    
    /**
     * Test case for sendSmsToMultipleRecipients
     *
     * sendSmsToMultipleRecipients.
     * @throws \Exception
     */
    public function testSendSmsToMultipleRecipients()
    {
        $this->setHttpMethod("POST");

        // Looking for a decorator first
        /** @var \SalesForce\MarketingCloud\TestHelper\Decorator\TransactionalMessagingApiDecorator $decorator */
        $decorator = $this->getDecorator();
        if (method_exists($decorator, "testSendSmsToMultipleRecipients")) {
            return $decorator->testSendSmsToMultipleRecipients();
        }
        
        // Setting up the resource creator
        $resourceCreator = $this->getResourceCreator();
        $resourceCreator->setModelClass(
            __FUNCTION__,
            "\SalesForce\MarketingCloud\Model\SendDefinitionToMultipleRecipientsResponse"
        );

        // SUT
        $this->createResourceOnEndpoint();
        $this->executeOperation("sendSmsToMultipleRecipients");
    }
    
    /**
     * Test case for sendSmsToSingleRecipient
     *
     * sendSmsToSingleRecipient.
     * @throws \Exception
     */
    public function testSendSmsToSingleRecipient()
    {
        $this->setHttpMethod("POST");

        // Looking for a decorator first
        /** @var \SalesForce\MarketingCloud\TestHelper\Decorator\TransactionalMessagingApiDecorator $decorator */
        $decorator = $this->getDecorator();
        if (method_exists($decorator, "testSendSmsToSingleRecipient")) {
            return $decorator->testSendSmsToSingleRecipient();
        }
        
        // Setting up the resource creator
        $resourceCreator = $this->getResourceCreator();
        $resourceCreator->setModelClass(
            __FUNCTION__,
            "\SalesForce\MarketingCloud\Model\SendDefinitionToSingleRecipientResponse"
        );

        // SUT
        $this->createResourceOnEndpoint();
        $this->executeOperation("sendSmsToSingleRecipient");
    }
}
